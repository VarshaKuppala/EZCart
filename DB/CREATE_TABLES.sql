CREATE DATABASE IF NOT EXISTS EZCART;
#drop database EZCART
USE EZCART;

CREATE TABLE IF NOT EXISTS User
(
	UserId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	Email VARCHAR(255) NOT NULL,
	Phone VARCHAR(20) NOT NULL,
	FName VARCHAR(100) NOT NULL,
	LName VARCHAR(100) NOT NULL,
	CreateDate DATETIME NOT NULL,
	AccountPassword VARCHAR(255) NOT NULL,
	PRIMARY KEY (UserId)
);

CREATE TABLE IF NOT EXISTS AdminUser (
	AdminId INT UNSIGNED NOT NULL,
	CONSTRAINT Admin_PK PRIMARY KEY (AdminId),
	CONSTRAINT Admin_User_FK FOREIGN KEY (AdminId) REFERENCES User(UserId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Vendor (
	VendorId INT UNSIGNED NOT NULL,
	StoreAddress VARCHAR(255),
	CONSTRAINT Vendor_PK PRIMARY KEY (VendorId),
	CONSTRAINT Vendor_User_FK FOREIGN KEY (VendorId) REFERENCES User(UserId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Customer (
	CustomerId INT UNSIGNED NOT NULL,
	CONSTRAINT Customer_PK PRIMARY KEY (CustomerId),
	CONSTRAINT Customer_User_FK FOREIGN KEY (CustomerId) REFERENCES User(UserId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Category
(
	CategoryId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	CategoryName VARCHAR(255) NOT NULL,
	CONSTRAINT Category_PK PRIMARY KEY (CategoryId)
);

CREATE TABLE IF NOT EXISTS Subcategory (
	SubcategoryId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	CategoryId INT UNSIGNED NOT NULL,
    SubcategoryName VARCHAR(100) NOT NULL,
	CONSTRAINT Customer_PK PRIMARY KEY (SubcategoryId),
	CONSTRAINT Subcategory_Category_FK FOREIGN KEY (CategoryId) REFERENCES Category(CategoryId) ON DELETE CASCADE ON UPDATE CASCADE
);

#CREATE TABLE IF NOT EXISTS CustomerAddress (
#	CustomerAddressId INT UNSIGNED NOT NULL AUTO_INCREMENT,
#	CustomerId INT UNSIGNED NOT NULL,
 #   IsPrimary BOOL DEFAULT 0,
#	CONSTRAINT CustomerAddress_PK PRIMARY KEY (CustomerAddressId),
#	CONSTRAINT CustomerAddress_Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId) ON DELETE CASCADE ON UPDATE CASCADE
#);

CREATE TABLE IF NOT EXISTS CustomerAddress (
	Address VARCHAR(255) NOT NULL ,
	CustomerId INT UNSIGNED NOT NULL,
	CONSTRAINT CustomerAddress_Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS CustomerOrder (
	OrderId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	OrderPrice FLOAT NOT NULL,
    OrderDate TIMESTAMP NOT NULL,
    AddressId INT NOT NULL,
    CustomerId INT UNSIGNED NOT NULL,
	CONSTRAINT CustomerOrder_PK PRIMARY KEY (OrderId),
	CONSTRAINT CustomerOrder_Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Payment (
	PaymentId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	PaymentStatus BOOL DEFAULT 0,
    OrderId INT UNSIGNED NOT NULL,
	CONSTRAINT Payment_PK PRIMARY KEY (PaymentId),
	CONSTRAINT Payment_Order_FK FOREIGN KEY (OrderId) REFERENCES CustomerOrder(OrderId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Product (
	ProductId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	ProductName VARCHAR(100) NOT NULL,
    ProductDescription VARCHAR(255) NOT NULL,
    ImageUrl VARCHAR(255),
    SubcategoryId INT UNSIGNED NOT NULL,
	CONSTRAINT Product_PK PRIMARY KEY (ProductId),
	CONSTRAINT Product_Subcategory_FK FOREIGN KEY (SubcategoryId) REFERENCES Subcategory(SubcategoryId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS OrderItem (
	OrderItemId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	ItemPrice FLOAT NOT NULL,
    Quantity SMALLINT NOT NULL,
    VendorId INT UNSIGNED NOT NULL,
    ProductId INT UNSIGNED NOT NULL,
    OrderId INT UNSIGNED NOT NULL,
	CONSTRAINT OrderItem_PK PRIMARY KEY (OrderItemId),
    CONSTRAINT OrderItem_Vendor_FK FOREIGN KEY (VendorId) REFERENCES Vendor(VendorId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT OrderItem_Product_FK FOREIGN KEY (ProductId) REFERENCES Product(ProductId) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT OrderItem_Order_FK FOREIGN KEY (OrderId) REFERENCES CustomerOrder(OrderId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Shipment (
	ShipmentId INT UNSIGNED NOT NULL AUTO_INCREMENT,
	ShipmentStatus SMALLINT NOT NULL DEFAULT 0, # status can be Preparing, , cancelled, shipped, delivered - 0/1/2/3
    OrderItemId INT UNSIGNED NOT NULL,
	CONSTRAINT Shipment_PK PRIMARY KEY (ShipmentId),
	CONSTRAINT Shipment_Subcategory_FK FOREIGN KEY (OrderItemId) REFERENCES OrderItem(OrderItemId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS CustomerRating (
	CustomerId INT UNSIGNED NOT NULL,
	ProductId INT UNSIGNED NOT NULL,
    Rating SMALLINT NOT NULL, # 1 -> 5
	CONSTRAINT CustomerRating_PK PRIMARY KEY (CustomerId, ProductId),
    CONSTRAINT CustomerRating_Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT CustomerRating_Product_FK FOREIGN KEY (ProductId) REFERENCES Product(ProductId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Cart (
	CustomerId INT UNSIGNED NOT NULL,
	ProductId INT UNSIGNED NOT NULL,
    Quantity SMALLINT NOT NULL,
	CONSTRAINT Cart_PK PRIMARY KEY (CustomerId, ProductId),
    CONSTRAINT Cart_Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT Cart_Product_FK FOREIGN KEY (ProductId) REFERENCES Product(ProductId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS WishList (
	CustomerId INT UNSIGNED NOT NULL,
	ProductId INT UNSIGNED NOT NULL,
	CONSTRAINT WishList_PK PRIMARY KEY (CustomerId, ProductId),
    CONSTRAINT WishList_Customer_FK FOREIGN KEY (CustomerId) REFERENCES Customer(CustomerId) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT WishList_Product_FK FOREIGN KEY (ProductId) REFERENCES Product(ProductId) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS ProductSupplies (
	VendorId INT UNSIGNED NOT NULL,
	ProductId INT UNSIGNED NOT NULL,
    Quantity INT NOT NULL,
    ItemPrice FLOAT NOT NULL,
	CONSTRAINT ProductSupplies_PK PRIMARY KEY (VendorId, ProductId),
    CONSTRAINT ProductSupplies_Vendor_FK FOREIGN KEY (VendorId) REFERENCES Vendor(VendorId) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT ProductSupplies_Product_FK FOREIGN KEY (ProductId) REFERENCES Product(ProductId) ON DELETE CASCADE ON UPDATE CASCADE
);
